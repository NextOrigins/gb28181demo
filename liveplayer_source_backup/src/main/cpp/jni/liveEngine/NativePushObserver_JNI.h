// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.


// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     io/anyrtc/live/internal/NativePushObserver

#ifndef io_anyrtc_live_internal_NativePushObserver_JNI
#define io_anyrtc_live_internal_NativePushObserver_JNI

#include <jni.h>
#include "webrtc/sdk/android/src/jni/jni_generator_helper.h"



// Step 1: Forward declarations.

JNI_REGISTRATION_EXPORT extern const char kClassPath_io_anyrtc_live_internal_NativePushObserver[];
const char kClassPath_io_anyrtc_live_internal_NativePushObserver[] =
    "io/anyrtc/live/internal/NativePushObserver";
// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT std::atomic<jclass>
    g_io_anyrtc_live_internal_NativePushObserver_clazz(nullptr);
#ifndef io_anyrtc_live_internal_NativePushObserver_clazz_defined
#define io_anyrtc_live_internal_NativePushObserver_clazz_defined
inline jclass io_anyrtc_live_internal_NativePushObserver_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_io_anyrtc_live_internal_NativePushObserver,
      &g_io_anyrtc_live_internal_NativePushObserver_clazz);
}
#endif


// Step 2: Constants (optional).


// Step 3: Method stubs.

static std::atomic<jmethodID> g_io_anyrtc_live_internal_NativePushObserver_onError(nullptr);
static void Java_NativePushObserver_onError(JNIEnv* env, const base::android::JavaRef<jobject>& obj,
    JniIntWrapper code,
    const base::android::JavaRef<jstring>& msg,
    const base::android::JavaRef<jstring>& extraInfo) {
  jclass clazz = io_anyrtc_live_internal_NativePushObserver_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      io_anyrtc_live_internal_NativePushObserver_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onError",
          "(ILjava/lang/String;Ljava/lang/String;)V",
          &g_io_anyrtc_live_internal_NativePushObserver_onError);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(code), msg.obj(), extraInfo.obj());
}

static std::atomic<jmethodID> g_io_anyrtc_live_internal_NativePushObserver_onWarning(nullptr);
static void Java_NativePushObserver_onWarning(JNIEnv* env, const base::android::JavaRef<jobject>&
    obj, JniIntWrapper code,
    const base::android::JavaRef<jstring>& msg,
    const base::android::JavaRef<jstring>& extraInfo) {
  jclass clazz = io_anyrtc_live_internal_NativePushObserver_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      io_anyrtc_live_internal_NativePushObserver_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onWarning",
          "(ILjava/lang/String;Ljava/lang/String;)V",
          &g_io_anyrtc_live_internal_NativePushObserver_onWarning);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(code), msg.obj(), extraInfo.obj());
}

static std::atomic<jmethodID>
    g_io_anyrtc_live_internal_NativePushObserver_onPushStatusUpdate(nullptr);
static void Java_NativePushObserver_onPushStatusUpdate(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper status,
    const base::android::JavaRef<jstring>& msg,
    const base::android::JavaRef<jstring>& extraInfo) {
  jclass clazz = io_anyrtc_live_internal_NativePushObserver_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      io_anyrtc_live_internal_NativePushObserver_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onPushStatusUpdate",
          "(ILjava/lang/String;Ljava/lang/String;)V",
          &g_io_anyrtc_live_internal_NativePushObserver_onPushStatusUpdate);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(status), msg.obj(), extraInfo.obj());
}

static std::atomic<jmethodID>
    g_io_anyrtc_live_internal_NativePushObserver_onStatisticsUpdate(nullptr);
static void Java_NativePushObserver_onStatisticsUpdate(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper appCpu,
    JniIntWrapper systemCpu,
    JniIntWrapper width,
    JniIntWrapper height,
    JniIntWrapper fps,
    JniIntWrapper videoBitrate,
    JniIntWrapper audioBitrate) {
  jclass clazz = io_anyrtc_live_internal_NativePushObserver_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      io_anyrtc_live_internal_NativePushObserver_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onStatisticsUpdate",
          "(IIIIIII)V",
          &g_io_anyrtc_live_internal_NativePushObserver_onStatisticsUpdate);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(appCpu), as_jint(systemCpu), as_jint(width),
              as_jint(height), as_jint(fps), as_jint(videoBitrate), as_jint(audioBitrate));
}

static std::atomic<jmethodID>
    g_io_anyrtc_live_internal_NativePushObserver_onCaptureFirstAudioFrame(nullptr);
static void Java_NativePushObserver_onCaptureFirstAudioFrame(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = io_anyrtc_live_internal_NativePushObserver_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      io_anyrtc_live_internal_NativePushObserver_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onCaptureFirstAudioFrame",
          "()V",
          &g_io_anyrtc_live_internal_NativePushObserver_onCaptureFirstAudioFrame);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_io_anyrtc_live_internal_NativePushObserver_onCaptureFirstVideoFrame(nullptr);
static void Java_NativePushObserver_onCaptureFirstVideoFrame(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = io_anyrtc_live_internal_NativePushObserver_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      io_anyrtc_live_internal_NativePushObserver_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onCaptureFirstVideoFrame",
          "()V",
          &g_io_anyrtc_live_internal_NativePushObserver_onCaptureFirstVideoFrame);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_io_anyrtc_live_internal_NativePushObserver_onGLContextCreated(nullptr);
static void Java_NativePushObserver_onGLContextCreated(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = io_anyrtc_live_internal_NativePushObserver_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      io_anyrtc_live_internal_NativePushObserver_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onGLContextCreated",
          "()V",
          &g_io_anyrtc_live_internal_NativePushObserver_onGLContextCreated);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_io_anyrtc_live_internal_NativePushObserver_onGLContextDestroyed(nullptr);
static void Java_NativePushObserver_onGLContextDestroyed(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  jclass clazz = io_anyrtc_live_internal_NativePushObserver_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      io_anyrtc_live_internal_NativePushObserver_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onGLContextDestroyed",
          "()V",
          &g_io_anyrtc_live_internal_NativePushObserver_onGLContextDestroyed);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id);
}

static std::atomic<jmethodID>
    g_io_anyrtc_live_internal_NativePushObserver_onMicrophoneVolumeUpdate(nullptr);
static void Java_NativePushObserver_onMicrophoneVolumeUpdate(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper volume) {
  jclass clazz = io_anyrtc_live_internal_NativePushObserver_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      io_anyrtc_live_internal_NativePushObserver_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onMicrophoneVolumeUpdate",
          "(I)V",
          &g_io_anyrtc_live_internal_NativePushObserver_onMicrophoneVolumeUpdate);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(volume));
}

static std::atomic<jmethodID>
    g_io_anyrtc_live_internal_NativePushObserver_onSetMixTranscodingConfig(nullptr);
static void Java_NativePushObserver_onSetMixTranscodingConfig(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj, JniIntWrapper code,
    const base::android::JavaRef<jstring>& msg) {
  jclass clazz = io_anyrtc_live_internal_NativePushObserver_clazz(env);
  CHECK_CLAZZ(env, obj.obj(),
      io_anyrtc_live_internal_NativePushObserver_clazz(env));

  jni_generator::JniJavaCallContextChecked call_context;
  call_context.Init<
      base::android::MethodID::TYPE_INSTANCE>(
          env,
          clazz,
          "onSetMixTranscodingConfig",
          "(ILjava/lang/String;)V",
          &g_io_anyrtc_live_internal_NativePushObserver_onSetMixTranscodingConfig);

     env->CallVoidMethod(obj.obj(),
          call_context.base.method_id, as_jint(code), msg.obj());
}

#endif  // io_anyrtc_live_internal_NativePushObserver_JNI
